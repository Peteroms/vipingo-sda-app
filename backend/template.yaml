AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Vipingo SDA Church App Backend (Offerings + Announcements + Media Gallery)

Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 20
    MemorySize: 256

Resources:

  # ðŸ”” SNS Topic for Treasurer Alerts
  OfferingAlertTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: OfferingAlertTopic

  OfferingAlertSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref OfferingAlertTopic
      Protocol: sms
      Endpoint: "+254755806579"

  # ðŸ”¶ Offerings Submission Lambda
  SubmitOfferingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SubmitOfferingsFunction
      Handler: app.handler
      CodeUri: src/submitOfferings
      Events:
        SubmitApi:
          Type: Api
          Properties:
            Path: /submit
            Method: post
            Cors:
              AllowMethods: "'POST,OPTIONS'"
              AllowHeaders: "'Content-Type'"
              AllowOrigin: "'*'"
      Environment:
        Variables:
          DYNAMO_TABLE: ChurchOfferings
          SNS_TOPIC_ARN: !Ref OfferingAlertTopic
          MPESA_CONSUMER_KEY: !Ref MpesaConsumerKey
          MPESA_CONSUMER_SECRET: !Ref MpesaConsumerSecret
          MPESA_SHORTCODE: !Ref MpesaShortcode
          MPESA_LIPA_NA_MPESA_SHORTCODE: !Ref MpesaLipaNaMpesaShortcode
          MPESA_LIPA_NA_MPESA_SHORTCODE_TYPE: !Ref MpesaLipaNaMpesaShortcodeType
          MPESA_PAAKEY: !Ref MpesaPaaKey
          MPESA_ENV: "sandbox" # Change to "production" for live
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt OfferingsTable.Arn
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: !Ref 
        - statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: "*"


  # ðŸ”¶ Announcements Fetch Lambda
  GetAnnouncementsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetAnnouncementsFunction
      Handler: app.handler
      CodeUri: src/getAnnouncements
      Events:
        GetAnnouncementsApi:
          Type: Api
          Properties:
            Path: /announcements
            Method: get
            Cors:
              AllowMethods: "'GET,OPTIONS'"
              AllowHeaders: "'Content-Type'"
              AllowOrigin: "'*'"
      Environment:
        Variables:
          TABLE_NAME: Announcements
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:Scan
                - dynamodb:GetItem
              Resource: !GetAtt AnnouncementsTable.Arn

  # ðŸ”¶ Gallery Fetch Lambda
  GetGalleryFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetGalleryFunction
      Handler: app.handler
      CodeUri: src/getGallery
      Events:
        GetGalleryApi:
          Type: Api
          Properties:
            Path: /gallery
            Method: get
            Cors:
              AllowMethods: "'GET,OPTIONS'"
              AllowHeaders: "'Content-Type'"
              AllowOrigin: "'*'"
      Environment:
        Variables:
          TABLE_NAME: Gallery
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:Scan
                - dynamodb:GetItem
              Resource: !GetAtt GalleryTable.Arn

  # ðŸ”· DynamoDB Tables
  OfferingsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ChurchOfferings
      BillingMode: PAYPERREQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  AnnouncementsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Announcements
      BillingMode: PAYPERREQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  GalleryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Gallery
      BillingMode: PAYPERREQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

Outputs:
  OfferingsApi:
    Description: "POST endpoint for submitting offerings"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/submit"

  AnnouncementsApi:
    Description: "GET endpoint for announcements"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/announcements"

  GalleryApi:
    Description: "GET endpoint for gallery images"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/gallery"
